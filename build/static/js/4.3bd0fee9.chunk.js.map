{"version":3,"sources":["utils/formStyle.js","utils/regexp.js","views/editPassword/index.jsx"],"names":["layout","labelCol","span","wrapperCol","tailLayout","offset","REGEXP","EditPassword","passwordReg","this","props","userName","id","checkOldPwd","className","title","name","onFinish","values","initialValues","userId","Item","style","display","disabled","label","rules","required","message","Password","pattern","dependencies","getFieldValue","validator","rule","value","Promise","reject","resolve","type","htmlType","to","Component","connect","state","user"],"mappings":"wRAAaA,EAAS,CACpBC,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,KAETE,EAAa,CACxBD,WAAY,CAAEE,OAAQ,EAAGH,KAAM,KCDpBI,EAKE,2E,QCDTC,G,8KACM,IACAC,EAAgBF,EADjB,EAE+BG,KAAKC,MAAnCC,EAFD,EAECA,SAAUC,EAFX,EAEWA,GAAIC,EAFf,EAEeA,YAKtB,OACE,uBAAMC,UAAU,OAAOC,MAAM,4BAC3B,qCAAMC,KAAK,SAAYhB,EAAvB,CAA+BiB,SALlB,SAACC,GAChBL,EAAYK,IAIyCC,cAAe,CAAER,SAAUA,EAAUS,OAAQR,KAC9F,sBAAMS,KAAN,CAAWL,KAAK,SAASM,MAAO,CAAEC,QAAS,SACzC,uBAAOC,UAAQ,KAEjB,sBAAMH,KAAN,CAAWI,MAAM,qBAAMT,KAAK,YAC1B,uBAAOQ,UAAQ,KAEjB,sBAAMH,KAAN,CAAWI,MAAM,2BAAOT,KAAK,SAASU,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,iDACvE,sBAAOC,SAAP,OAEF,sBAAMR,KAAN,CACEI,MAAM,qBACNT,KAAK,YACLU,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,yCAC3B,CAAEE,QAAStB,EAAaoB,QAAS,oJAEnC,sBAAOC,SAAP,OAEF,sBAAMR,KAAN,CACEI,MAAM,iCACNM,aAAc,CAAC,aACff,KAAK,aACLU,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,qDAC3B,gBAAGI,EAAH,EAAGA,cAAH,MAAwB,CACtBC,UADsB,SACZC,EAAMC,GACd,OAAKA,GAASH,EAAc,eAAiBG,EAGtCC,QAAQC,OAAO,sEAFbD,QAAQE,eAMvB,sBAAOT,SAAP,OAEF,sBAAMR,KAAN,iBAAejB,EAAf,CAA2BU,UAAU,eACnC,uBAAQyB,KAAK,UAAUC,SAAS,UAAhC,gBAGA,uBAAQD,KAAK,WACX,kBAAC,IAAD,CAAME,GAAG,cAAT,wB,GAnDaC,cA4DZC,uBAAQ,SAACC,GAAD,OAAWA,EAAMC,OAAM,CAAEhC,iBAAjC8B,CAAgDpC","file":"static/js/4.3bd0fee9.chunk.js","sourcesContent":["export const layout = {\r\n  labelCol: { span: 4 },\r\n  wrapperCol: { span: 16 }\r\n}\r\nexport const tailLayout = {\r\n  wrapperCol: { offset: 4, span: 16 }\r\n}\r\n","// 常用正则表达式常量，整个项目的正则表达式请在此处统一维护\r\n// 正则表达式（英语：Regular Expression，在代码中常简写为regex、regexp或RE）使用一个字符串来描述、匹配一系列符合某个句法规则的字符串。\r\n// 语法  /正则表达式主体/修饰符(可选)\r\n\r\nexport const REGEXP = {\r\n  phoneReg: /^1([38][0-9]|4[579]|5[0-3,5-9]|6[6]|7[0135678]|9[89])\\d{8}$/, // 手机号的正则表达式\r\n  idNumberReg: /(^\\d{15}$)|(^\\d{18}$)|(^\\d{17}(\\d|X|x)$)/, // 身份证的正则表达式\r\n  emailReg: /^\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/, // email的正则表达式\r\n  passwordReg2: /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{6,18}$/, // 密码的正则表达式（6-18位字母数字组合）\r\n  passwordReg: /^(?![A-z0-9]+$)(?![A-z~@*()_]+$)(?![0-9~@*()_]+$)([A-z0-9~@*()_]{6,18})$/, // 包含特殊字符\r\n  dateReg: /^\\d{4}-\\d{2}-\\d{2}/, // 日期的正则表达式（2019-01-01）\r\n  regionReg: /^[\\u4e00-\\u9fa5]+(,[\\u4e00-\\u9fa5]+){2}$/, // 地区的正则表达式\r\n  telephoneReg: /([0-9]{3,4}-)?[0-9]{7,8}/,   //  电话号码正则验证\r\n  telephoneReg2: /[0-9]{3,4}/,   //  电话号码正则验证\r\n  telephoneReg3: /[0-9]{6,8}/,   //  电话号码正则验证\r\n  english: /([a-zA-Z])$/, // 只能输入字母\r\n};","import React, { Component } from 'react'\r\nimport { Form, Input, Button, Card } from 'antd'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { layout, tailLayout } from '@/utils/formStyle'\r\nimport * as REGEXP from '@/utils/regexp'\r\nimport { checkOldPwd } from '@/store/actions'\r\nimport './editPassword.less'\r\nclass EditPassword extends Component {\r\n  render() {\r\n    const { passwordReg } = REGEXP.REGEXP\r\n    const { userName, id, checkOldPwd } = this.props\r\n    // 修改密码方法\r\n    const onFinish = (values) => {\r\n      checkOldPwd(values)\r\n    }\r\n    return (\r\n      <Card className='card' title='密码修改'>\r\n        <Form name='basic' {...layout} onFinish={onFinish} initialValues={{ userName: userName, userId: id }}>\r\n          <Form.Item name='userId' style={{ display: 'none' }}>\r\n            <Input disabled />\r\n          </Form.Item>\r\n          <Form.Item label='用户名' name='userName'>\r\n            <Input disabled />\r\n          </Form.Item>\r\n          <Form.Item label='原始密码' name='oldPwd' rules={[{ required: true, message: '请输入原始密码!' }]}>\r\n            <Input.Password />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label='新密码'\r\n            name='userToken'\r\n            rules={[\r\n              { required: true, message: '请输入新密码!' },\r\n              { pattern: passwordReg, message: '安全性较低，6-16位，务必包含字符、数字、特殊符号！' }\r\n            ]}>\r\n            <Input.Password />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label='确认新密码'\r\n            dependencies={['userToken']}\r\n            name='confirmPwd'\r\n            rules={[\r\n              { required: true, message: '请输入确认新密码!' },\r\n              ({ getFieldValue }) => ({\r\n                validator(rule, value) {\r\n                  if (!value || getFieldValue('userToken') === value) {\r\n                    return Promise.resolve()\r\n                  }\r\n                  return Promise.reject('两次输入的密码不一致！')\r\n                }\r\n              })\r\n            ]}>\r\n            <Input.Password />\r\n          </Form.Item>\r\n          <Form.Item {...tailLayout} className='btn-footer'>\r\n            <Button type='primary' htmlType='submit'>\r\n              确定\r\n            </Button>\r\n            <Button type='default'>\r\n              <Link to='/dashboard'>取消</Link>\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect((state) => state.user, { checkOldPwd })(EditPassword)\r\n"],"sourceRoot":""}